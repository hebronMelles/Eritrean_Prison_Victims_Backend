spring.application.name=Prison-Victims
# Database (values come from env vars)
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# JPA / Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
# Server
server.port=8181
server.ssl.enabled=false
# OAuth2 Cognito (values come from env vars)
spring.security.oauth2.client.registration.cognito.client-id=${COGNITO_CLIENT_ID}
spring.security.oauth2.client.registration.cognito.client-secret=${COGNITO_CLIENT_SECRET}
spring.security.oauth2.client.registration.cognito.redirect-uri=${COGNITO_REDIRECT_URI}
spring.security.oauth2.client.registration.cognito.scope=openid,email,phone,profile
spring.security.oauth2.client.provider.cognito.issuer-uri=${COGNITO_ISSUER_URI}
spring.security.oauth2.client.provider.cognito.user-name-attribute=email
# Logging
logging.level.org.springframework.security.oauth2.client=TRACE
logging.level.org.springframework.security.oauth2.provider=TRACE
# Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
# Static resources
spring.web.resources.chain.cache=false
spring.web.resources.cache.period=0
spring.web.resources.static-locations=classpath:/static/
# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=admas-chat
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# AWS credentials (from env vars)
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretKey=${AWS_SECRET_ACCESS_KEY}
aws.region=${AWS_REGION}
